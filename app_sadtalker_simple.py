import os, sys
import gradio as gr
from src.gradio_demo import SadTalker

# Import c√°c module m·ªõi
from home import create_home_tab, custom_home_css
from lecture_input import create_lecture_input_interface
from lecture_output import generate_lecture_video_handler

try:
    import webui  # in webui
    in_webui = True
except:
    in_webui = False

def switch_to_lecture():
    """Chuy·ªÉn sang trang t·∫°o video b√†i gi·∫£ng"""
    return gr.update(visible=False), gr.update(visible=True)

def switch_to_home():
    """Quay l·∫°i trang ch·ªß"""
    return gr.update(visible=True), gr.update(visible=False)

def sadtalker_demo_with_home(checkpoint_path='checkpoints', config_path='src/config', warpfn=None):
    sad_talker = SadTalker(checkpoint_path, config_path, lazy_load=True)

    with gr.Blocks(analytics_enabled=False, title="SadTalker", css=custom_home_css()) as sadtalker_interface:
        # State ƒë·ªÉ qu·∫£n l√Ω trang hi·ªán t·∫°i
        current_page = gr.State("home")
        
        # Container ch√≠nh
        with gr.Column(elem_classes=["main-container"]):
            # --- TRANG CH·ª¶ ---
            with gr.Column(visible=True, elem_classes=["home-page"]) as home_page:
                # T·∫°o buttons Gradio th·ª±c s·ª± - ·∫©n nh∆∞ng c√≥ th·ªÉ trigger
                with gr.Row(visible=False):
                    start_btn = gr.Button("Start Creating Video", elem_id="start_btn", elem_classes=["hidden-start-btn"])
                
                # G·ªçi h√†m t·∫°o trang ch·ªß v√† nh·∫≠n button navigation
                nav_get_started_btn = create_home_tab()
            
            # --- TRANG T·∫†O VIDEO B√ÄI GI·∫¢NG ---
            with gr.Column(visible=False, elem_classes=["lecture-page"]) as lecture_page:
                gr.HTML("""
                    <div style="text-align: center; margin-bottom: 2rem;">
                        <h2 style="font-size: 2.5rem; font-weight: bold; color: #111827; margin-bottom: 1rem;">
                            üéì SadTalker Lecture Video Generator
                        </h2>
                        <p style="font-size: 1.25rem; color: #6B7280; max-width: 48rem; margin: 0 auto;">
                            T·∫°o video b√†i gi·∫£ng k·∫øt h·ª£p slide PowerPoint v√† video gi√°o vi√™n gi·∫£ng b√†i
                        </p>
                    </div>
                """)

                # N√∫t quay l·∫°i trang ch·ªß
                back_btn = gr.Button("‚Üê Quay l·∫°i trang ch·ªß", variant="secondary")

                # T·∫°o giao di·ªán input
                input_components = create_lecture_input_interface()
                
                # K·∫øt n·ªëi v·ªõi output handler
                input_components['generate_btn'].click(
                    fn=lambda pptx, img, lang, preprocess, still, enh, batch, size, pose: generate_lecture_video_handler(
                        sad_talker, pptx, img, lang, preprocess, still, enh, batch, size, pose
                    ),
                    inputs=[
                        input_components['pptx_file'], 
                        input_components['source_image'], 
                        input_components['audio_language'],
                        input_components['preprocess_type'], 
                        input_components['is_still_mode'], 
                        input_components['enhancer'], 
                        input_components['batch_size'], 
                        input_components['size_of_image'], 
                        input_components['pose_style']
                    ],
                    outputs=[input_components['final_video'], input_components['status']]
                )
        
        # K·∫øt n·ªëi events ƒë·ªÉ chuy·ªÉn ƒë·ªïi trang
        start_btn.click(
            fn=switch_to_lecture,
            outputs=[home_page, lecture_page]
        )
        
        # K·∫øt n·ªëi button navigation
        nav_get_started_btn.click(
            fn=switch_to_lecture,
            outputs=[home_page, lecture_page]
        )
        
        back_btn.click(
            fn=switch_to_home,
            outputs=[home_page, lecture_page]
        )
    
    return sadtalker_interface

if __name__ == "__main__":
    demo = sadtalker_demo_with_home()
    demo.launch(
        server_name='127.0.0.1',
        server_port=7862,
        show_error=True,
        quiet=False,
        share=False,
        inbrowser=True
    )